<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE project>

<project
    basedir=".."
	default="webserver-start"
	name="build_control_for_google_appengine"
>

    <description>
        Basic build system for Web Application development
        with target to manage the Google App Engine Web container
    </description>

    <property file="${user.home}/local.build.properties"
        description="All values defined in this file take precedence. Because this file is not in the SCM, each developer can setup his/her environment independently."
    />

    <import file="build.xml" optional="false" taskname="base_build_control" />

    <property name="appengine.sdk.dir"
        description="Location of the Google App Engine SDK"
        location="${basedir}/bin/appengine-java-sdk-1.3.5"
    />

    <import file="${appengine.sdk.dir}/config/user/ant-macros.xml" />

    <!-- ================ -->
    <!-- Public variables -->
    <!-- ================ -->

    <property environment="env"/>

    <property name="app.hostname"
        description="Name of the local host. Update it in your local.build.properties file."
        value="${env.COMPUTERNAME}"
    />

    <property name="app.serverPort"
        description="Port number used by the Web server"
        value="9999"
    />

    <!-- ============== -->
    <!-- Public targets -->
    <!-- ============== -->

    <target name="clean" description="remove all created/copied files/directories at setup time" depends="base_build_control.clean, step-configuration-clean">
        <delete file="src/war/WEB-INF/lib/**/*" />
    </target>

    <target name="init" description="get external dependencies and prepare the build environment" depends="base_build_control.init">
        <!-- This customized ant file is required to be able to not instrument (DataNucleus) the test code for the App Engine server to run -->
        <copy todir="${appengine.sdk.dir}/config/user" file="deps/lib/appengine/ant-macros.xml" overwrite="true" />
        <!-- Copy the App Engine files -->
        <copy todir="src/war/WEB-INF/lib" flatten="true">
            <fileset dir="${appengine.sdk.dir}/lib/user">
                <include name="**/*.jar" />
            </fileset>
        </copy>
        <!-- Copy the Twetailer dependencies -->
        <copy file="deps/lib/amazon/amazon-fps-2008-09-17-java-library-for-gae.jar" todir="src/war/WEB-INF/lib" />
        <copy file="deps/lib/commons/commons-codec-1.3.jar" todir="src/war/WEB-INF/lib" />
        <copy file="deps/lib/domderrien/domderrien-1.0.8.jar" todir="src/war/WEB-INF/lib" />
        <copy file="deps/lib/twitter4j/twitter4j-core-2.1.2.jar" todir="src/war/WEB-INF/lib" />
        <copy todir="src/war/WEB-INF/lib">
            <fileset dir="deps/lib/dyuproject" />
        </copy>
        <copy file="deps/lib/wave/json.jar" todir="src/war/WEB-INF/lib" />
        <copy file="deps/lib/wave/jsonrpc.jar" todir="src/war/WEB-INF/lib" />
        <copy file="deps/lib/wave/wave-robot-api-20090916.jar" todir="src/war/WEB-INF/lib" />
    </target>

    <target name="compile" description="compile the Java code and the JSP files" depends="base_build_control.compile, step-jsp-compile" />

    <target name="test" description="run the unit tests for the Java and the JavaScript code" depends="step-datanucleus-enhance-for-tests, base_build_control.test" />

    <target name="webserver-start" description="start the configured webserver" depends="step-datanucleus-enhance, step-appengine-start" />

    <target name="webserver-start-debug" description="start the configured webserver in debug mode, ready to be monitor from eclipse" depends="step-datanucleus-enhance, step-appengine-start-debug" />

    <target name="deploy" description="deploy the product on Google App Engine platform" depends="step-datanucleus-enhance, step-stage-prepare, step-stage-deploy" />

    <!-- ================= -->
    <!-- Private variables -->
    <!-- ================= -->

    <path id="jspc.runtime.classpath">
        <filelist dir="${appengine.sdk.dir}/lib/shared">
            <file name="jsp/repackaged-appengine-jasper-compiler-5.0.28.jar" />
            <file name="jsp/repackaged-appengine-jasper-runtime-5.0.28.jar" />
            <file name="jsp/repackaged-appengine-commons-logging-1.1.1.jar" />
            <file name="jsp/repackaged-appengine-commons-el-1.0.jar" />
            <file name="geronimo-servlet_2.5_spec-1.2.jar" />
            <file name="geronimo-jsp_2.1_spec-1.0.1.jar" />
        </filelist>
    </path>

    <taskdef classname="org.apache.jasper.JspC" name="jspc2">
        <classpath refid="jspc.runtime.classpath" />
    </taskdef>

    <!-- =============== -->
    <!-- Private targets -->
    <!-- =============== -->

    <target name="step-configuration-clean">
        <delete file="src/war/WEB-INF/appengine-web.xml" />
        <delete file="src/war/WEB-INF/cron.xml" />
        <delete file="src/war/WEB-INF/datastore-indexes.xml" />
        <delete file="src/war/WEB-INF/classes/META-INF/jdoconfig.xml" />
        <delete file="src/war/WEB-INF/classes/log4j.properties" />
        <delete file="src/war/WEB-INF/classes/openid.properties" />
        <delete file="src/war/WEB-INF/logging.properties" />
        <delete file="src/war/WEB-INF/queue.xml" />
        <delete file="src/war/_wave/capabilities.xml" />
    </target>

    <target name="step-configuration-push" depends="base_build_control.step-configuration-push">
        <copy
            file="src/resources/appengine-web.xml.tmpl"
            tofile="src/war/WEB-INF/appengine-web.xml"
            overwrite="true"
        >
            <filterchain refid="genericFilterChain" />
        </copy>
        <copy file="src/resources/cron.xml"              todir="src/war/WEB-INF/"                  overwrite="true" />
        <copy file="src/resources/datastore-indexes.xml" todir="src/war/WEB-INF/"                  overwrite="true" />
        <copy file="src/resources/jdoconfig.xml"         todir="src/war/WEB-INF/classes/META-INF/" overwrite="true" />
        <copy file="src/resources/log4j.properties"      todir="src/war/WEB-INF/classes/"          overwrite="true" />
        <copy file="src/resources/logging.properties"    todir="src/war/WEB-INF/"                  overwrite="true" />
        <copy file="src/resources/openid.properties"     todir="src/war/WEB-INF/classes"           overwrite="true" />
        <copy file="src/resources/queue.xml"             todir="src/war/WEB-INF/"                  overwrite="true" />
        <copy
            file="src/resources/capabilities.xml.tmpl"
            tofile="src/war/_wave/capabilities.xml"
            overwrite="true"
        >
            <filterchain refid="genericFilterChain" />
        </copy>
    </target>

    <target name="step-devfiles-clean">
        <delete dir="src/war/WEB-INF/classes/org/domderrien/build" />
        <delete failonerror="yes">
            <fileset dir="src/war/WEB-INF/classes">
                <include name="**/Test*.*" />
                <include name="**/Mock*.*" />
            </fileset>
        </delete>
    </target>

    <target name="step-jsp-compile">
        <delete dir="${temp.dir}/jsp" />
        <mkdir dir="${temp.dir}/jsp" />
        <jspc2
            outputDir="${temp.dir}/jsp"
            uriroot="src/war"
            validateXml="false"
            webXmlFragment="${temp.dir}/jsp/generated_web.xml"
        />
        <javac
            destdir="${temp.dir}/jsp"
            deprecation="false"
            debug="true"
            includeantruntime="false"
            optimize="false"
            excludes=""
            srcdir="${temp.dir}/jsp"
        >
            <classpath location="src/war/WEB-INF/classes"/>
            <classpath refid="java.compile.classpath" />
            <classpath refid="jspc.runtime.classpath" />
        </javac>
    </target>

    <target name="step-datanucleus-enhance" depends="compile, step-devfiles-clean">
        <enhance_war war="${basedir}/src/war" />
    </target>

    <target name="step-datanucleus-enhance-for-tests" depends="compile">
        <delete dir="src/war/WEB-INF/classes/org/domderrien/build" />
        <enhance_war war="${basedir}/src/war" includes="twetailer/dto/*.class" />
    </target>

    <target name="step-appengine-start" depends="step-configuration-push">
        <dev_appserver port="${app.serverPort}" war="${basedir}/src/war" />
    </target>

    <target name="step-appengine-start-debug">
        <dev_appserver port="${app.serverPort}" war="${basedir}/src/war">
            <options>
                <arg value="--jvm_flag=-Xdebug"/>
                <arg value="--jvm_flag=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=${app.serverPort}"/>
            </options>
        </dev_appserver>
    </target>

    <target name="step-stage-prepare">
        <delete includeemptydirs="yes" failonerror="no" dir="${temp.dir}/appengine-stage" />
        <mkdir dir="${temp.dir}/appengine-stage" />
        <copy todir="${temp.dir}/appengine-stage" overwrite="yes" includeemptydirs="false">
            <fileset dir="src/war">
                <include name="**/*" />
                <exclude name="js/dojo/**/*"/>
                <exclude name="WEB-INF/appengine-generated/**" />
                <exclude name="WEB-INF/classes/**/Test*.*" />
                <exclude name="WEB-INF/classes/**/Mock*.*" />
            </fileset>
        </copy>
    </target>

    <target name="step-stage-deploy">
        <appcfg action="update" war="${temp.dir}/appengine-stage">
            <options>
                <arg value="--email=dominique.derrien@gmail.com" />
            </options>
        </appcfg>
    </target>

    <target name="step-stage-rollback">
        <appcfg action="rollback" options="--email=dominique.derrien@gmail.com" war="${temp.dir}/appengine-stage" />
    </target>

</project>
